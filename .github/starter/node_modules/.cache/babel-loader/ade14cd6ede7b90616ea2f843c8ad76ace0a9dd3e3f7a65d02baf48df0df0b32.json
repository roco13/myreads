{"ast":null,"code":"var _jsxFileName = \"/Users/rfernandezgiro/Downloads/nd0191-c1-myreads/starter/src/Book.js\";\nimport PropTypes from \"prop-types\";\nimport UpdateBook from \"./UpdateBook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Book = ({\n  book,\n  updateBook\n}) => {\n  //handle error when there is no thumbnail image\n  let bgImg = \"none\";\n  try {\n    bgImg = book.imageLinks.thumbnail;\n  } catch (error) {\n    console.error(\"Error In Catch Statement: There is no thumbnail image\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(\"${bgImg}\")`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-shelf-changer\",\n          children: /*#__PURE__*/_jsxDEV(UpdateBook, {\n            book: book,\n            onUpdate: updateBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-authors\",\n        children: book.authors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Book;\nBook.propTypes = {\n  book: PropTypes.object.isRequired,\n  updateBook: PropTypes.func.isRequired\n};\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["PropTypes","UpdateBook","jsxDEV","_jsxDEV","Book","book","updateBook","bgImg","imageLinks","thumbnail","error","console","children","className","style","width","height","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","title","authors","_c","propTypes","object","isRequired","func","$RefreshReg$"],"sources":["/Users/rfernandezgiro/Downloads/nd0191-c1-myreads/starter/src/Book.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport UpdateBook from \"./UpdateBook\";\n\nconst Book = ({book, updateBook}) => {\n\n    //handle error when there is no thumbnail image\n    let bgImg= \"none\";\n    try {\n        bgImg = book.imageLinks.thumbnail;\n    } catch (error) {\n        console.error(\"Error In Catch Statement: There is no thumbnail image\");\n    }\n\n    return (\n        <li>\n            <div className=\"book\">\n            <div className=\"book-top\">\n                <div\n                className=\"book-cover\"\n                style={{\n                    width: 128,\n                    height: 193,\n                    backgroundImage:\n                    `url(\"${bgImg}\")`,\n                }}\n                ></div>\n                <div className=\"book-shelf-changer\">\n                <UpdateBook book={book}  onUpdate={updateBook} />\n                </div>\n            </div>\n            <div className=\"book-title\">{book.title}</div>\n            <div className=\"book-authors\">{book.authors}</div>\n            </div>\n        </li>\n    )\n};\n\nBook.propTypes = {\n    book: PropTypes.object.isRequired,\n    updateBook: PropTypes.func.isRequired\n};\n\nexport default Book;"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAU,CAAC,KAAK;EAEjC;EACA,IAAIC,KAAK,GAAE,MAAM;EACjB,IAAI;IACAA,KAAK,GAAGF,IAAI,CAACG,UAAU,CAACC,SAAS;EACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uDAAuD,CAAC;EAC1E;EAEA,oBACIP,OAAA;IAAAS,QAAA,eACIT,OAAA;MAAKU,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACrBT,OAAA;QAAKU,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACrBT,OAAA;UACAU,SAAS,EAAC,YAAY;UACtBC,KAAK,EAAE;YACHC,KAAK,EAAE,GAAG;YACVC,MAAM,EAAE,GAAG;YACXC,eAAe,EACd,QAAOV,KAAM;UAClB;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACPlB,OAAA;UAAKU,SAAS,EAAC,oBAAoB;UAAAD,QAAA,eACnCT,OAAA,CAACF,UAAU;YAACI,IAAI,EAAEA,IAAK;YAAEiB,QAAQ,EAAEhB;UAAW;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNlB,OAAA;QAAKU,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAEP,IAAI,CAACkB;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9ClB,OAAA;QAAKU,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAEP,IAAI,CAACmB;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb,CAAC;AAACI,EAAA,GAhCIrB,IAAI;AAkCVA,IAAI,CAACsB,SAAS,GAAG;EACbrB,IAAI,EAAEL,SAAS,CAAC2B,MAAM,CAACC,UAAU;EACjCtB,UAAU,EAAEN,SAAS,CAAC6B,IAAI,CAACD;AAC/B,CAAC;AAED,eAAexB,IAAI;AAAC,IAAAqB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}